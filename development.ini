[app:main]
use = egg:assembl

pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en
pyramid.includes =
    pyramid_debugtoolbar
    pyramid_tm

# The debug toolbar is currently incompatible with the backbone frontend
debugtoolbar.enabled = false
debugtoolbar.hosts = 127.0.0.0/8
debugtoolbar.intercept_exc = false

sqlalchemy.url = postgresql+psycopg2://assembl:assembl@localhost/assembl
# Unnessary to set this true in development, as logger_sqlalchemy DEBUG 
# below will also output sql statements
sqlalchemy.echo = False

jinja2.directories = assembl:templates

assembl.domain = assembl.net
mail.host = localhost
assembl.admin_email = webmaster@assembl.net

# Each of these providers requires us to register a client app ID.
# Also, we must give a visible callback URL.
# Please contact maparent@acm.org for details.

login_providers =
# facebook
# twitter
# github
# google
# openid

# https://developers.facebook.com/docs/facebook-login/getting-started-web/
# https://developers.facebook.com/apps/
#
# facebook.consumer_key =
# facebook.consumer_secret =
# facebook.scope =

# https://dev.twitter.com/apps/new
#
# twitter.consumer_key =
# twitter.consumer_secret =

# http://developer.github.com/v3/oauth/
# https://github.com/settings/applications
#
# github.consumer_key =
# github.consumer_secret =
# github.scope = repo

# https://code.google.com/apis/console/ ; API Access; Create Client ID
#
# google.consumer_key =
# google.consumer_secret =

# This should be the front-facing URL
# openid.realm=

# Beaker settings
# We should use memcache asap
beaker.session.type = ext:memcached
beaker.session.url = 127.0.0.1:11211
beaker.session.data_dir = %(here)s/data/sessions/data
beaker.session.lock_dir = %(here)s/data/sessions/lock
session.key = CHANGEME_enter_a_key
session.secret = CHANGEME_enter_a_secret
session.cookie_on_exception = true
#security.hash_algorithm = sha256
security.email_token_salt = [enter a key]

# Anykeystore settings for Velruse
store = sqlalchemy
store.url = sqlite:///%(here)s/assembl.db

[pshell]
models = assembl.models
db = assembl.db.DBSession
transaction = transaction

[alembic]
# Path to migration scripts
script_location = assembl/alembic
sqlalchemy.url = postgresql+psycopg2://assembl:assembl@localhost/assembl

# Template used to generate migration files
# file_template = %%(rev)s_%%(slug)s

# Set to 'true' to run the environment during
# the 'revision' command, regardless of autogenerate
# revision_environment = false

[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 6543

# Begin logging configuration

[loggers]
keys = root, assembl, sqlalchemy, alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_assembl]
level = DEBUG
handlers =
qualname = assembl

[logger_sqlalchemy]
level = DEBUG
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

# End logging configuration

[uwsgi]
master = true
processes = 2
threads = 1
buffer-size = 65535
