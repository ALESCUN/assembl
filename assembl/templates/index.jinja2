{% extends 'base.jinja2' %}

{% block extra_header %}{% endblock %}

{% block content %}
    <div id="inbox"></div>

    <div id="message">

        <div class="bar bar--title">
            <div class="bar-body">
                <div class="bar-left">
                    <a href="#" class="arrowbutton">Previous</a>
                </div>

                <div class="bar-center">Message</div>

                <div class="bar-right">
                    <a href="#" class="arrowbutton arrowbutton--right">Next</a>
                </div>
            </div>
        </div>

        <div class="message container">
            <div class="message-header">
                
                <div class="media">
                    <div class="media-imgleft">
                        <img src="http://www.gravatar.com/avatar/39cbf87dae724f2cb64e92accdd4d349.jpg?s=38" alt="User"  class="image-rounded" />
                    </div>
                    <div class="media-body">
                        <div class="margin-bottom">
                            <strong>Bénigne Morin</strong> a dit <time>9, juin 2013</time>
                        </div>
                        <span>Synthèse intermédiaire : Monnaies de récompense</span>
                    </div>
                </div>

            </div>

            <div class="message-body">
                
                <div class="text">{{ lipsum(n=5, html=True) }}</div>

            </div>
        </div>
    </div>
{% endblock %}

{% block extra_js %}
<script type="text/javascript">
requirejs([
    "app",
    "jquery",
    "views/inbox",
    "views/lateralMenu",
    "models/email"
    ],
function(app, $, Inbox, LateralMenu, Email){
    'use strict';

    app.init();
    app.lateralMenu = new LateralMenu({el: '#lateralMenu'}).render();
    $('#assembl-mainbutton').on('click', app.lateralMenu.trigger.bind(app.lateralMenu, 'toggle'));

    //app.inbox = new Inbox({collection: app.emails});
    //app.inbox.render();

    //app.message = new Message();

    //

    var MIN_TEXT_TO_BUBBLE = 17;

    function addToBucket(ev){
        document.body.classList.add('is-bucket-open');

        var li = $('<li>').text( ev.currentTarget.getAttribute('data-segment'));
        $('#bucket').append(li);
    };

    function doTheSelection(ev){
        window.setTimeout(function(){
            var sel = document.getSelection();

            if( sel.type === "None" ){
                if( app.bubble ) {
                    app.bubble.hide();
                }
                return;
            }

            var selectedText = sel.getRangeAt(0).cloneContents();
            if(selectedText.firstChild && selectedText.firstChild.textContent.length > MIN_TEXT_TO_BUBBLE ){
                showBubble(app.mouse.x, app.mouse.y, selectedText.firstChild.textContent);
            } else if(app.bubble) {
                window.setTimeout(function(){
                    app.bubble.hide();
                }, 100);
            }
        });
    }

    function showBubble(x, y, text){
        if( ! app.bubble ) {

            var div = $('<div>', { 'class': 'textbubble' } );
            
            $(document.body).append(div);
            
            div.on('click', addToBucket);

            app.bubble = div;
        } else {
            app.bubble.show();
        }

        app.bubble.attr('data-segment', text);

        text = '...' + text.substr( - MIN_TEXT_TO_BUBBLE );

        app.bubble
            .text(text)
            .css({
                'top': y,
                'left': x,
                'margin-left': app.bubble.width() / -2
            });
    }

    //$('.text').on('mouseup', doTheSelection);
    $(document).on('selectionchange', doTheSelection);
    $(document).on('mousemove', function(ev){
        app.mouse = { x: ev.x, y: ev.y };
    });


    // Tests for drag the bucket
    var bucket = {
        el: $('#bucket'),
        isMoving: false,
        wrapper: $('#wrapper')
    };

    bucket.wrapper.css('-webkit-transform', 'translateX('+bucket.el.width()+'px)');

    window.bucket = bucket;
    bucket.open = function(){
        var time = 600,
            lateralMenuWidth = 453,
            width = bucket.el.width();

        bucket.el.animate({translateX: lateralMenuWidth+'px'}, time, 'ease');

        bucket.wrapper.animate({translateX: (lateralMenuWidth + width)+'px' }, time, 'ease');

        bucket.isOpen = true;
    };

    bucket.close = function(){
        var time = 600,
            lateralMenuWidth = 453,
            width = bucket.el.width();

        bucket.el.animate({translateX: '0px'}, time, 'ease');

        bucket.wrapper.animate({translateX: width+'px' }, time, 'ease');

        bucket.isOpen = false;
    }

    bucket.move = function(ev){
        if( bucket.isMoving ){
            if( bucket.isOpen ){
                bucket.el.width( ev.x - 450 );
                bucket.wrapper.css('-webkit-transform', 'translateX('+ev.x+'px)')
            } else {
                bucket.el.width( ev.x );
                bucket.wrapper.css('-webkit-transform', 'translateX('+ev.x+'px)')
            }
        }
    }

    $('.bucket-closebtn').on('mousedown', function(ev){
        bucket.isMoving = true;

        app.body.css("-webkit-user-select", "none");

        $(document).on('mousemove', bucket.move);

        $(document).on('mouseup', function(ev){
            bucket.isMoving = false;
            $(document)
                .off('mousemove', bucket.move)
                .off('mouseup');

            app.body.css("-webkit-user-select", "text");
        })

    });

});
</script>
{% endblock %}
