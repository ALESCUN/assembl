"""added_toc

Revision ID: 1f236361ce82
Revises: 121822bb8a65
Create Date: 2012-10-27 10:41:24.094552

"""

# revision identifiers, used by Alembic.
revision = '1f236361ce82'
down_revision = '3055083e17d5'

from alembic import context, op
import sqlalchemy as sa
import transaction


from assembl import models as m
from assembl.lib import config

db = m.DBSession


def upgrade(pyramid_env):
    with context.begin_transaction():
        ### commands auto generated by Alembic - please adjust! ###
        op.create_table('document_type',
        sa.Column('ins_date', sa.DateTime(), nullable=False),
        sa.Column('mod_date', sa.DateTime(), nullable=False),
        sa.Column('code', sa.String(length=32), nullable=False),
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint('code')
        )
        op.create_table('item',
        sa.Column('ins_date', sa.DateTime(), nullable=False),
        sa.Column('mod_date', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('parent_id', sa.Integer(), nullable=True),
        sa.Column('title', sa.Unicode(length=255), nullable=False),
        sa.Column('description', sa.UnicodeText(), nullable=True),
        sa.ForeignKeyConstraint(['parent_id'], ['item.id'], ),
        sa.PrimaryKeyConstraint('id')
        )
        op.create_table('selector_type',
        sa.Column('ins_date', sa.DateTime(), nullable=False),
        sa.Column('mod_date', sa.DateTime(), nullable=False),
        sa.Column('code', sa.String(length=16), nullable=False),
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint('code')
        )
        op.create_table('document',
        sa.Column('ins_date', sa.DateTime(), nullable=False),
        sa.Column('mod_date', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('type', sa.String(length=32), nullable=False),
        sa.ForeignKeyConstraint(['type'], ['document_type.code'], ),
        sa.PrimaryKeyConstraint('id')
        )
        op.create_table('selection',
        sa.Column('ins_date', sa.DateTime(), nullable=False),
        sa.Column('mod_date', sa.DateTime(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('item_id', sa.Integer(), nullable=False),
        sa.Column('document_id', sa.Integer(), nullable=False),
        sa.Column('type', sa.String(length=16), nullable=False),
        sa.Column('reference', sa.String(length=255), nullable=False),
        sa.Column('text', sa.UnicodeText(), nullable=True),
        sa.ForeignKeyConstraint(['document_id'], ['document.id'], ),
        sa.ForeignKeyConstraint(['item_id'], ['item.id'], ),
        sa.ForeignKeyConstraint(['type'], ['selector_type.code'], ),
        sa.PrimaryKeyConstraint('id')
        )
        op.add_column(u'post', sa.Column('document_id', sa.Integer(), nullable=True))
        ### end Alembic commands ###

    # Do stuff with the app's models here.
    with transaction.manager:
        for M in [m.Post,]:
            db.add(m.DocumentType(code=M.__tablename__, name=M.__name__))


def downgrade(pyramid_env):
    with context.begin_transaction():
        ### commands auto generated by Alembic - please adjust! ###
        op.drop_column(u'post', 'document_id')
        op.drop_table('selection')
        op.drop_table('document')
        op.drop_table('selector_type')
        op.drop_table('item')
        op.drop_table('document_type')
        ### end Alembic commands ###
